{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","setInterval","this","setState","console","log","prevProps","props","name","clearInterval","React","Component","App","secWaisted","isClockVisible","clockName","Math","floor","random","someFunction","sttChanger","prevState","show","hide","nameRandomizer","className","toISOString","substr","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAYaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,QAASC,aAAY,gBAHzB,uDAME,WAAqB,IAAD,OAClBC,KAAKN,MAAMI,QAAUC,aAAY,WAC/B,EAAKE,SAAS,CACZN,MAAM,IAAIC,MAAOC,uBAGnBK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAbP,gCAgBE,SAAmBS,GACbJ,KAAKK,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DN,KAAKK,MAAMC,SAnBhF,kCAuBE,WACEC,cAAcP,KAAKN,MAAMI,WAxB7B,oBA2BE,WACE,OACE,qCACE,iCACE,6DAIF,yDAEE,+BACGE,KAAKK,MAAMC,OAHhB,IAME,uBACA,qBAAK,UAAQ,OAAb,SACGN,KAAKN,MAAMC,iBA3CxB,GAA2Ba,IAAMC,WCA3BC,E,4MACJhB,MAAQ,CACNiB,WAAY,EACZC,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAS7BC,aAAe,WAEbf,QAAQC,IAAI,gB,EAGde,WAAa,WACX,EAAKjB,UAAS,SAACkB,GAAD,MAAgB,CAC5BP,gBAAiBO,EAAUP,oB,EAI/BQ,KAAO,WACL,EAAKnB,SAAS,CACZW,gBAAgB,K,EAIpBS,KAAO,WACL,EAAKpB,SAAS,CACZW,gBAAgB,K,EAIpBU,eAAiB,WACf,EAAKrB,SAAS,CACZY,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,uDA/B/B,WAAqB,IAAD,OAClBjB,aAAY,WACV,EAAKE,UAAS,SAACkB,GAAD,MAAgB,CAAER,WAAYQ,EAAUR,WAAa,QAClE,O,oBAgCL,WACE,OACE,qBAAKY,UAAU,MAAf,SACE,qCACE,iCACE,2DAIF,8EAEG,IAAI3B,KAA6B,IAAxBI,KAAKN,MAAMiB,YAAmBa,cAAcC,OAAO,GAAI,MAEnE,wBAAQC,KAAK,SAASC,QAAS3B,KAAKiB,aAApC,oCAGA,uBACA,wBACES,KAAK,SACLC,QAAS3B,KAAKsB,eAFhB,SAIE,+DAIF,wBACEI,KAAK,SACLC,QAAS3B,KAAKkB,WAFhB,SAIE,wDAIF,uBACA,wBACEQ,KAAK,SACLC,QAAS3B,KAAKoB,KAFhB,wBAMA,wBACEM,KAAK,SACLC,QAAS3B,KAAKqB,KAFhB,wBAMA,kJAIErB,KAAKN,MAAMkB,gBAAkB,cAAC,EAAD,CAAON,KAAMN,KAAKN,MAAMmB,YACvD,gC,GA7FQL,IAAMC,WAoGTC,IC7GfkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.42bda1f5.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: number,\n};\n\ntype State = {\n  date: string,\n  timerId: NodeJS.Timer,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    timerId: setInterval(() => {}),\n  };\n\n  componentDidMount() {\n    this.state.timerId = setInterval(() => {\n      this.setState({\n        date: new Date().toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <fieldset>\n        <legend>\n          <mark>\n            this is Clock component\n          </mark>\n        </legend>\n        <h1>\n          Hello I`m Clock named &#34;\n          <mark>\n            {this.props.name}\n          </mark>\n          &#34;\n          <br />\n          <div data-cy=\"time\">\n            {this.state.date}\n          </div>\n        </h1>\n      </fieldset>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean,\n  secWaisted: number,\n  clockName: number,\n};\n\nclass App extends React.Component <Props, State> {\n  state = {\n    secWaisted: 0,\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 999),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState((prevState) => ({ secWaisted: prevState.secWaisted + 1 }));\n    }, 1000);\n  }\n\n  someFunction = () => {\n    // eslint-disable-next-line no-console\n    console.log('Hello WOrld');\n  };\n\n  sttChanger = () => {\n    this.setState((prevState) => ({\n      isClockVisible: !prevState.isClockVisible,\n    }));\n  };\n\n  show = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hide = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  nameRandomizer = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 999),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <fieldset>\n          <legend>\n            <mark>\n              this is App component\n            </mark>\n          </legend>\n          <h2>\n            time of your life waisted on this page =&#160;\n            {new Date(this.state.secWaisted * 1000).toISOString().substr(11, 8)}\n          </h2>\n          <button type=\"button\" onClick={this.someFunction}>\n            Hello World to console\n          </button>\n          <br />\n          <button\n            type=\"button\"\n            onClick={this.nameRandomizer}\n          >\n            <h2>\n              Set random name for a clock\n            </h2>\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.sttChanger}\n          >\n            <h2>\n              trigger state button\n            </h2>\n          </button>\n          <br />\n          <button\n            type=\"button\"\n            onClick={this.show}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.hide}\n          >\n            Hide Clock\n          </button>\n          <span>\n            &#160;ðŸ¢€ these buttons are just for tests,\n            &#160;better use my &#34;trigger state&#34; button above ðŸ˜‰\n          </span>\n          { this.state.isClockVisible && <Clock name={this.state.clockName} />}\n          <br />\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}